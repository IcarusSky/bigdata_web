<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunmnet.bigdata.web.security.persistent.SecUserDao">
  <resultMap id="BaseResultMap" type="com.sunmnet.bigdata.web.security.model.po.SecUser">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="user_name" jdbcType="VARCHAR" property="userName"/>
    <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
    <result column="account_type" jdbcType="TINYINT" property="accountType"/>
    <result column="account_code" jdbcType="VARCHAR" property="accountCode"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="sex" jdbcType="TINYINT" property="sex"/>
    <result column="cell_phone" jdbcType="VARCHAR" property="cellPhone"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, user_password, account_type, account_code, name, sex, cell_phone, 
    create_time, update_time
  </sql>
  
  <!-- 相同账户类型和学号/教工号的账户信息  -->
  <select id="selectAccount" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sec_user
    where 1=1
    <if test="accountType != null">
      and account_type = #{accountType}
    </if> 
    <if test="accountCode != null">
      and account_code = #{accountCode}
    </if>

  </select>
  
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sec_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sec_user
    where user_name = #{username}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List"/>
    from
      sec_user
    where 1 = 1
    <if test="username != null and username.length() > 0">
      and user_name like '%${username}%'
    </if>
    <if test="name != null and name.length() > 0">
      and name like '%${name}%'
    </if>
    <if test="accountCode != null and accountCode.length() > 0">
      and account_code like '%${accountCode}%'
    </if>
    <if test="roleId != null">
      and id in (
        select
          urr.user_id
        from
          sec_user_rel_role urr,
          sec_role r
        where 1 = 1
          and urr.role_id = r.id
          and r.id = #{roleId}
      )
    </if>
  </select>
  <select id="selectUserRoles" resultType="com.sunmnet.bigdata.web.security.model.po.SecUserRoles">
    select
      u.id as userId,
      group_concat(r.role_name) as roles
    from
      sec_user u,
      sec_user_rel_role urr,
      sec_role r
    where 1 = 1
      and u.id = urr.user_id
      and urr.role_id = r.id
      <if test="userIds != null and userIds.size() > 0">
        and u.id in
        <foreach item="item" index="index" collection="userIds" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    group by u.id
  </select>
  <select id="countSameUserName" resultType="java.lang.Integer">
    select
      count(*)
    from
      sec_user
    where 1 = 1
      <if test="id != null">
        and id != #{id}
      </if>
      and user_name = #{userName}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from sec_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sunmnet.bigdata.web.security.model.po.SecUser">
    insert into sec_user (id, user_name, user_password, 
      account_type, account_code, name, 
      sex, cell_phone, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{accountType,jdbcType=TINYINT}, #{accountCode,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{cellPhone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sunmnet.bigdata.web.security.model.po.SecUser" useGeneratedKeys="true" keyProperty="id">
    insert into sec_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="accountCode != null">
        account_code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="cellPhone != null">
        cell_phone,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=TINYINT},
      </if>
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="cellPhone != null">
        #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="com.sunmnet.bigdata.web.security.model.po.SecUser">
    update sec_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=TINYINT},
      </if>
      <if test="accountCode != null">
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="cellPhone != null">
        cell_phone = #{cellPhone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateUserPasswordByUserNo" parameterType="com.sunmnet.bigdata.web.security.model.po.SecUser">
    update sec_user
    set  user_password = #{userPassword,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateById" parameterType="com.sunmnet.bigdata.web.security.model.po.SecUser">
    update sec_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=TINYINT},
      account_code = #{accountCode,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      cell_phone = #{cellPhone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>